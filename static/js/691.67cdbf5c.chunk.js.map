{"version":3,"file":"static/js/691.67cdbf5c.chunk.js","mappings":"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","sources":["api/moviesApi.js","components/MovieCard/MovieCard.jsx","components/MovieCard/MovieCard.styled.jsx","pages/Home/Home.styled.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport { OPTIONS } from 'constants';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('trending/all/day?language=en-US', OPTIONS);\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId, part = '') => {\n  const response = await axios.get(`movie/${movieId}${part}?language=en-US`, OPTIONS);\n  return response.data;\n}\n\nexport const getMovies = async (query, page = 1) => {\n  const response = await axios.get(`/search/movie?query=${query}&page=${page}`, OPTIONS)\n  return response.data;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IMAGE_BASE_PATH } from 'constants';\nimport { MovieTitle, MovieListItem, NoPoster } from './MovieCard.styled';\n\nconst MovieCard = ({ id, title, posterPath, location }) => {\n  return (\n    <MovieListItem>\n      <Link\n        to={`/movies/${id}`}\n        style={{ textDecoration: 'none' }}\n        state={{ from: location }}\n      >\n        {posterPath ? (\n          <img\n            src={`${IMAGE_BASE_PATH}${posterPath}`}\n            alt={`${title} poster`}\n            width={280}\n            height={420}\n          />\n        ) : (\n          <NoPoster>No poster</NoPoster>\n        )}\n        <MovieTitle>{title}</MovieTitle>\n      </Link>\n    </MovieListItem>\n  );\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const MovieTitle = styled.h2`\n  color: ${({ theme }) => theme.light_red};\n  text-align: center;\n  font-size: 16px;\n  margin: 10px;\n  text-decoration: none;\n`;\n\n\nexport const MovieListItem = styled.li`\n  background-color: ${({ theme }) => theme.second_black};\n  border-radius: 8px;\n\n  &:hover ${MovieTitle},\n  &:focus ${MovieTitle} {\n    color: ${({ theme }) => theme.dark_red};\n  }\n`;\n\nexport const NoPoster = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  width: 280px;\n  height: 420px;\n`","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n  margin: 20px auto;\n  display: block;\n  text-align: center;\n  text-transform: capitalize;\n`\n\nexport const MovieList = styled.ul`\n  display: grid;\n  grid-template-columns: 280px;\n  gap: 20px;\n  justify-content: center;\n\n  @media (min-width: 768px) {\n    grid-template-columns: 280px 280px;\n  }\n\n  @media (min-width: 920px) {\n    grid-template-columns: 280px 280px 280px;\n  }\n\n  @media (min-width: 1240px) {\n    grid-template-columns: 280px 280px 280px 280px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin: 20px auto;\n  max-width: 320px;\n  height: 40px;\n  border-radius: 20px;\n  box-shadow: 1px 1px 4px 1px rgba(0,0,0,0.2);  \n`\n\nexport const Input = styled.input`\n  border: none;\n  height: 100%;\n  width: 100%;\n  border-top-left-radius: 20px;\n  border-bottom-left-radius: 20px;\n  padding: 0;\n  padding-left: 20px;\n  outline: none;\n`\n\nexport const SearchButton = styled.button`\n  color: #fff;\n  height: 100%;\n  width: 80px;\n  border-bottom-right-radius: 20px;\n  border-top-right-radius: 20px;\n  border: none;\n  background-color: ${({ theme }) => theme.light_red};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.dark_red};\n  }\n`","import React, { useEffect, useState } from 'react';\nimport { getMovies } from 'api/moviesApi';\nimport { toast } from 'react-toastify';\nimport { useSearchParams, useLocation, useNavigate } from 'react-router-dom';\nimport { MovieList } from '../Home/Home.styled';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport Loader from 'components/Loader/Loader';\nimport { Form, Input, SearchButton } from './Movies.styled';\n\nconst Movies = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const initializateData = async () => {\n      if (location.search) {\n        if (location.search.slice(0, 7) !== '?query=') {\n          navigate('/queryError', { replace: true });\n          return;\n        }\n        const query = location.search.slice(7);\n        await getMoviesData(query);\n      }\n    };\n\n    initializateData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const { query } = e.target.elements;\n\n    await getMoviesData(query.value).finally(() =>\n      setSearchParams({ query: query.value })\n    );\n\n    e.target.reset();\n  };\n\n  const getMoviesData = async query => {\n    setIsLoading(true);\n    try {\n      const data = await getMovies(query);\n      setMovies(data.results);\n    } catch (error) {\n      toast.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"query\" />\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </Form>\n      <MovieList>\n        {movies.map(({ id, title, poster_path }) => (\n          <MovieCard\n            location={location}\n            key={id}\n            id={id}\n            title={title}\n            posterPath={poster_path}\n          />\n        ))}\n      </MovieList>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","OPTIONS","sent","abrupt","data","stop","apply","arguments","getMovieDetails","_ref2","_callee2","movieId","part","_args2","_context2","length","undefined","concat","_x","getMovies","_ref3","_callee3","query","page","_args3","_context3","_x2","id","title","posterPath","location","_jsx","MovieListItem","children","_jsxs","Link","to","style","textDecoration","state","from","src","IMAGE_BASE_PATH","alt","width","height","NoPoster","MovieTitle","styled","_templateObject","_taggedTemplateLiteral","theme","light_red","_templateObject2","second_black","dark_red","_templateObject3","Title","MovieList","Form","Input","SearchButton","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","setSearchParams","useLocation","navigate","useNavigate","useEffect","initializateData","search","slice","replace","getMoviesData","handleSubmit","e","preventDefault","target","elements","value","finally","reset","results","t0","toast","finish","_Fragment","Loader","onSubmit","type","name","map","_ref4","poster_path","MovieCard"],"sourceRoot":""}