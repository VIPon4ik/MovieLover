{"version":3,"file":"static/js/544.a7466414.chunk.js","mappings":"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","sources":["api/moviesApi.js","components/MovieCard/MovieCard.jsx","components/MovieCard/MovieCard.styled.jsx","pages/Home/Home.jsx","pages/Home/Home.styled.jsx"],"sourcesContent":["import axios from 'axios';\nimport { OPTIONS } from 'constants';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('trending/all/day?language=en-US', OPTIONS);\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId, part = '') => {\n  const response = await axios.get(`movie/${movieId}${part}?language=en-US`, OPTIONS);\n  return response.data;\n}\n\nexport const getMovies = async (query, page = 1) => {\n  const response = await axios.get(`/search/movie?query=${query}&page=${page}`, OPTIONS)\n  return response.data;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IMAGE_BASE_PATH } from 'constants';\nimport { MovieTitle, MovieListItem, NoPoster } from './MovieCard.styled';\n\nconst MovieCard = ({ id, title, posterPath, location }) => {\n  return (\n    <MovieListItem>\n      <Link\n        to={`/movies/${id}`}\n        style={{ textDecoration: 'none' }}\n        state={{ from: location }}\n      >\n        {posterPath ? (\n          <img\n            src={`${IMAGE_BASE_PATH}${posterPath}`}\n            alt={`${title} poster`}\n            width={280}\n            height={420}\n          />\n        ) : (\n          <NoPoster>No poster</NoPoster>\n        )}\n        <MovieTitle>{title}</MovieTitle>\n      </Link>\n    </MovieListItem>\n  );\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\nimport { COLORS } from 'constants';\n\nexport const MovieTitle = styled.h2`\n  color: ${COLORS.light_red};\n  text-align: center;\n  font-size: 16px;\n  margin: 10px;\n  text-decoration: none;\n`;\n\n\nexport const MovieListItem = styled.li`\n  background-color: ${COLORS.second_black};\n  border-radius: 8px;\n\n  &:hover ${MovieTitle},\n  &:focus ${MovieTitle} {\n    color: ${COLORS.dark_red};\n  }\n`;\n\nexport const NoPoster = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  width: 280px;\n  height: 420px;\n`","import React, { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'api/moviesApi';\nimport { toast } from 'react-toastify';\nimport { MovieList, Title } from './Home.styled';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { useLocation } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getTrendingMovies();\n        setMovies(data.results);\n      } catch (error) {\n        toast.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <Title>Trending today</Title>\n      <MovieList>\n        {movies.map(({ id, title, poster_path }) =>\n          title ? (\n            <MovieCard\n              location={location}\n              key={id}\n              id={id}\n              title={title}\n              posterPath={poster_path}\n            />\n          ) : null\n        )}\n      </MovieList>\n    </>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n  margin: 20px auto;\n  display: block;\n  text-align: center;\n  text-transform: capitalize;\n`\n\nexport const MovieList = styled.ul`\n  display: grid;\n  grid-template-columns: 280px;\n  gap: 20px;\n  justify-content: center;\n\n  @media (min-width: 768px) {\n    grid-template-columns: 280px 280px;\n  }\n\n  @media (min-width: 920px) {\n    grid-template-columns: 280px 280px 280px;\n  }\n\n  @media (min-width: 1240px) {\n    grid-template-columns: 280px 280px 280px 280px;\n  }\n`;\n"],"names":["axios","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","OPTIONS","sent","abrupt","data","stop","apply","arguments","getMovieDetails","_ref2","_callee2","movieId","part","_args2","_context2","length","undefined","concat","_x","getMovies","_ref3","_callee3","query","page","_args3","_context3","_x2","id","title","posterPath","location","_jsx","MovieListItem","children","_jsxs","Link","to","style","textDecoration","state","from","src","IMAGE_BASE_PATH","alt","width","height","NoPoster","MovieTitle","styled","_templateObject","_taggedTemplateLiteral","COLORS","_templateObject2","_templateObject3","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","movies","setMovies","useLocation","useEffect","fetchTrendingMovies","results","t0","toast","finish","_Fragment","Loader","Title","MovieList","map","poster_path","MovieCard"],"sourceRoot":""}