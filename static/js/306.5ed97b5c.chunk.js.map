{"version":3,"file":"static/js/306.5ed97b5c.chunk.js","mappings":"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","sources":["api/moviesApi.js","components/CastCard/CastCard.styled.jsx","components/CastCard/CastCard.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/MovieCard/MovieCard.styled.jsx"],"sourcesContent":["import axios from 'axios';\nimport { OPTIONS } from 'constants';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('trending/all/day?language=en-US', OPTIONS);\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId, part = '') => {\n  const response = await axios.get(`movie/${movieId}${part}?language=en-US`, OPTIONS);\n  return response.data;\n}\n\nexport const getMovies = async (query, page = 1) => {\n  const response = await axios.get(`/search/movie?query=${query}&page=${page}`, OPTIONS)\n  return response.data;\n}\n","import styled from \"styled-components\";\nimport { MovieTitle, MovieListItem, NoPoster } from \"components/MovieCard/MovieCard.styled\";\n\nexport const CastCardItem = styled(MovieListItem)``\n\nexport const CastName = styled(MovieTitle)``\n\nexport const CastCharacter = styled(CastName)`\n  font-size: 12px;\n`\n\nexport const NoImage = styled(NoPoster)``\n","import React from 'react';\nimport { IMAGE_BASE_PATH } from 'constants';\nimport { CastCardItem, CastName, NoImage, CastCharacter } from './CastCard.styled';\n\nconst CastCard = ({ profile_path, name, character }) => {\n  return (\n    <CastCardItem>\n      {profile_path ? (\n        <img\n          src={`${IMAGE_BASE_PATH}${profile_path}`}\n          alt={`${name}`}\n          width={280}\n          loading=\"lazy\"\n        />\n      ) : (\n        <NoImage>No image</NoImage>\n      )}\n      <CastName>{name}</CastName>\n      <CastCharacter>Character: {character}</CastCharacter>\n    </CastCardItem>\n  );\n};\n\nexport default CastCard;\n","import styled from \"styled-components\";\n\nexport const CastList = styled.ul`\n  display: grid;\n  grid-template-columns: 280px;\n  gap: 20px;\n  justify-content: center;\n\n  @media (min-width: 768px) {\n    grid-template-columns: 280px 280px;\n  }\n\n  @media (min-width: 920px) {\n    grid-template-columns: 280px 280px 280px;\n  }\n\n  @media (min-width: 1240px) {\n    grid-template-columns: 280px 280px 280px 280px;\n  }\n`;","import React, { useEffect, useState } from 'react';\nimport { getMovieDetails } from 'api/moviesApi';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Loader from 'components/Loader/Loader';\nimport CastCard from 'components/CastCard/CastCard';\nimport { CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState([]);\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      setIsLoading(true);\n      try {\n        const movieCredits = await getMovieDetails(movieId, '/credits');\n        setMovieCast(movieCredits.cast);\n      } catch (error) {\n        toast.error('Problem with API: ', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovieCast();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <CastList>\n        {movieCast.map(({ character, name, profile_path, id }) => (\n          <CastCard key={id} character={character} name={name} profile_path={profile_path} />\n        ))}\n      </CastList>\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\nimport { COLORS } from 'constants';\n\nexport const MovieTitle = styled.h2`\n  color: ${COLORS.light_red};\n  text-align: center;\n  font-size: 16px;\n  margin: 10px;\n  text-decoration: none;\n`;\n\n\nexport const MovieListItem = styled.li`\n  background-color: ${COLORS.black};\n  border-radius: 8px;\n\n  &:hover ${MovieTitle},\n  &:focus ${MovieTitle} {\n    color: ${COLORS.dark_red};\n  }\n`;\n\nexport const NoPoster = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${COLORS.white};\n  width: 280px;\n  height: 420px;\n`"],"names":["axios","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","OPTIONS","sent","abrupt","data","stop","apply","arguments","getMovieDetails","_ref2","_callee2","movieId","part","_args2","_context2","length","undefined","concat","_x","getMovies","_ref3","_callee3","query","page","_args3","_context3","_x2","CastCardItem","styled","MovieListItem","_templateObject","_taggedTemplateLiteral","CastName","MovieTitle","_templateObject2","CastCharacter","_templateObject3","NoImage","NoPoster","_templateObject4","profile_path","name","character","_jsxs","children","_jsx","src","IMAGE_BASE_PATH","alt","width","loading","CastList","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","useParams","_useState3","_useState4","movieCast","setMovieCast","useEffect","getMovieCast","movieCredits","cast","t0","toast","finish","_Fragment","Loader","map","id","CastCard","COLORS"],"sourceRoot":""}